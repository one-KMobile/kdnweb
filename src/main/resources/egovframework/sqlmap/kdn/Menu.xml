<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//iBATIS.com//DTD SQL Map 2.0//EN" "http://www.ibatis.com/dtd/sql-map-2.dtd">

<sqlMap namespace="Menu">
	
	<typeAlias alias="box" type="kdn.cmm.box.Box"/>
	
	<resultMap id="Result.getMenuList"  class="box">
		<result property="menu_idx" column="MENU_IDX" nullValue=""/>
		<result property="menu_id" column="MENU_ID" nullValue=""/>
		<result property="menu_nm" column="MENU_NM" nullValue=""/>
		<result property="menu_account" column="MENU_ACCOUNT" nullValue=""/>
		<result property="top_menu_id" column="TOP_MENU_ID" nullValue=""/>
		<result property="controller_method" column="CONTROLLER_METHOD" nullValue=""/>
		<result property="reg_date" column="REG_DATE" nullValue=""/>
		<result property="reg_date_string" column="REG_DATE_STRING" nullValue=""/>
		<result property="reg_id" column="REG_ID" nullValue=""/>
		<result property="use_yn" column="USE_YN" nullValue=""/>
		<result property="top_menu_id_count" column="TOP_MENU_ID_COUNT" nullValue=""/>
	</resultMap>
	
	<!-- [메뉴] 목록 조회 -->
	<select id="Menu.getMenuList" parameterClass="box" resultMap="Result.getMenuList" >
		SELECT * FROM ( SELECT rownum rn, TB.* FROM (
			SELECT 
				  OMN.MENU_IDX      
				  ,OMN.MENU_ID            
				  ,OMN.MENU_NM          
				  ,OMN.MENU_ACCOUNT 
				  ,OMN.TOP_MENU_ID     
				  ,OMN.CONTROLLER_METHOD 
				  ,OMN.REG_DATE   
				  ,TO_CHAR(OMN.REG_DATE , 'YYYY-MM-DD') AS REG_DATE_STRING        
				  ,OMN.REG_ID  
				  ,OMN.USE_YN
				  ,(SELECT COUNT(MN.TOP_MENU_ID) FROM M_MENU_T MN WHERE MN.TOP_MENU_ID =  OMN.MENU_ID) AS TOP_MENU_ID_COUNT           
		  	FROM M_MENU_T OMN 
		  	WHERE 1=1
		  	<isNotEmpty property="searchWrd" >
			  	<isEqual prepend="AND" property="searchCnd" compareValue="All">
			           (OMN.MENU_ID LIKE '%' ||#searchWrd#|| '%' or OMN.MENU_NM LIKE '%' ||#searchWrd#|| '%') 
		        </isEqual>
		        <isEqual prepend="AND" property="searchCnd" compareValue="menuId">
			            OMN.MENU_ID LIKE '%' ||#searchWrd#|| '%'
		        </isEqual>
		        <isEqual prepend="AND" property="searchCnd" compareValue="menuNm">
			            OMN.MENU_NM LIKE '%' ||#searchWrd#|| '%'
		        </isEqual>
	        </isNotEmpty>
	        ORDER BY OMN.MENU_ID ASC ,OMN.TOP_MENU_ID ASC
        ) TB ) WHERE rn BETWEEN #firstIndex# + 1 AND #firstIndex# + #recordCountPerPage#
						
	</select>	
	
	<!-- [메뉴] 목록 카운트 조회 -->
	<select id="Menu.getMenuListTotCnt" parameterClass="box" resultClass="int">
			SELECT 
				COUNT(*) totcnt
			FROM M_MENU_T
			WHERE 1=1
			<isNotEmpty property="searchWrd" >
			  	<isEqual prepend="AND" property="searchCnd" compareValue="All">
			           (MENU_ID LIKE '%' ||#searchWrd#|| '%' or MENU_NM LIKE '%' ||#searchWrd#|| '%') 
		        </isEqual>
		        <isEqual prepend="AND" property="searchCnd" compareValue="menuId">
			            MENU_ID LIKE '%' ||#searchWrd#|| '%'
		        </isEqual>
		        <isEqual prepend="AND" property="searchCnd" compareValue="menuNm">
			            MENU_NM LIKE '%' ||#searchWrd#|| '%'
		        </isEqual>
	        </isNotEmpty>
	</select>
	
	<resultMap id="Result.getMenuView" class="box">
		<result property="menu_idx" column="MENU_IDX" nullValue=""/>
		<result property="menu_id" column="MENU_ID" nullValue=""/>
		<result property="menu_nm" column="MENU_NM" nullValue=""/>
		<result property="menu_account" column="MENU_ACCOUNT" nullValue=""/>
		<result property="top_menu_id" column="TOP_MENU_ID" nullValue=""/>
		<result property="controller_method" column="CONTROLLER_METHOD" nullValue=""/>
		<result property="reg_date" column="REG_DATE" nullValue=""/>
		<result property="reg_date_string" column="REG_DATE_STRING" nullValue=""/>
		<result property="reg_id" column="REG_ID" nullValue=""/>
		<result property="upd_date" column="UPD_DATE" nullValue=""/>
		<result property="upd_date_string" column="UPD_DATE_STRING" nullValue=""/>
		<result property="upd_id" column="UPD_ID" nullValue=""/>
		<result property="use_yn" column="USE_YN" nullValue=""/>
		<result property="top_menu_id_count" column="TOP_MENU_ID_COUNT" nullValue=""/>
		<result property="top_menu_id_nm" column="TOP_MENU_ID_NM" nullValue=""/>
	</resultMap>
	
	<!-- [메뉴] 정보 조회  -->
	<select id="Menu.getMenuView" parameterClass="box" resultMap="Result.getMenuView" >
		<![CDATA[
			SELECT
			     OMN.MENU_IDX      
				  ,OMN.MENU_ID            
				  ,OMN.MENU_NM          
				  ,OMN.MENU_ACCOUNT 
				  ,OMN.TOP_MENU_ID     
				  ,OMN.CONTROLLER_METHOD 
				  ,OMN.REG_DATE   
				  ,TO_CHAR(OMN.REG_DATE , 'YYYY-MM-DD') AS REG_DATE_STRING        
				  ,OMN.REG_ID 
				  ,OMN.UPD_DATE
				  ,TO_CHAR(OMN.UPD_DATE , 'YYYY-MM-DD') AS UPD_DATE_STRING
				  ,OMN.UPD_ID 
				  ,OMN.USE_YN   
				  ,(SELECT COUNT(MN.TOP_MENU_ID) FROM M_MENU_T MN WHERE MN.TOP_MENU_ID =  OMN.MENU_ID) AS TOP_MENU_ID_COUNT
				  ,(SELECT MN.MENU_NM FROM M_MENU_T MN WHERE MN.MENU_ID =  OMN.TOP_MENU_ID) AS TOP_MENU_ID_NM
		  	FROM 
		  		M_MENU_T OMN
			WHERE
				OMN.MENU_IDX = #menu_idx#	
		]]>				
	</select>
	
	<!-- [메뉴] 등록 저장 --> 
	<insert id="Menu.menuSave" parameterClass="box">
		<![CDATA[
			INSERT INTO M_MENU_T ( 
				   MENU_IDX      
				  ,MENU_ID            
				  ,MENU_NM          
				  ,MENU_ACCOUNT 
				  ,TOP_MENU_ID     
				  ,CONTROLLER_METHOD 
				  ,REG_DATE   
				  ,REG_ID 
				  ,USE_YN   
			 )VALUES ( 
					SEQ_M_MENU_T.NEXTVAL
					,trim(#menu_id#)
					,#menu_nm#
					,#menu_account#
					,trim(#top_menu_id#)
					,#controllerMethod#
					,SYSDATE
					,#reg_id#
					,#use_yn#
			  )
		]]>
	</insert>
	
	<!-- [메뉴] 수정  -->
	<update id="Menu.menuUpdate" parameterClass="box">
		<![CDATA[
			UPDATE M_MENU_T SET
					TOP_MENU_ID = trim(#top_menu_id#)
					,MENU_NM =  #menu_nm# 
					,MENU_ACCOUNT = #menu_account#
				    ,CONTROLLER_METHOD = #controllerMethod#
				    ,USE_YN = #use_yn#
					,UPD_DATE = SYSDATE
					,UPD_ID = #upd_id# 
			WHERE MENU_IDX = #menu_idx# 
		]]>
	</update>
	
	<!-- [공통그룹코드] 삭제  -->
	<delete id="Menu.menuDelete" parameterClass="box">
			DELETE FROM M_MENU_T
			WHERE MENU_IDX IN (<iterate property="chk" conjunction=",">#chk[]#</iterate>)	 
 	</delete>
 	
	<resultMap id="Result.topMenuIdList"  class="box">
		<result property="menu_idx" column="MENU_IDX" nullValue=""/>
		<result property="menu_id" column="MENU_ID" nullValue=""/>
		<result property="menu_nm" column="MENU_NM" nullValue=""/>
	</resultMap>
	
	<!-- [메뉴] 상위메뉴ID 선택 리스트 -->
	<select id="Menu.topMenuIdList" parameterClass="box" resultMap="Result.topMenuIdList" >
			SELECT 
			    MENU_IDX
			    ,MENU_ID
			    ,MENU_NM 
			FROM M_MENU_T      
			WHERE TOP_MENU_ID = '000000'
			AND USE_YN = 'Y'
			ORDER BY TOP_MENU_ID ASC
	</select>
	
	<!-- [메뉴] 메뉴ID 중복 체크 카운트 -->
	<select id="Menu.getMenuIdOverlapCount" parameterClass="box" resultClass="int">
			SELECT 
				COUNT(*) totCnt
			FROM M_MENU_T 
			WHERE 1=1
			AND MENU_ID = trim(#menu_id#)
	</select>
	
	<!-- [메뉴] 하위 메뉴가 있는지 체크하는 카운트  -->
	<select id="Menu.isSubMenuCnt" parameterClass="box" resultClass="int">
		SELECT 
			COUNT(*) AS totCnt  
		FROM M_MENU_T 
		WHERE CONTROLLER_METHOD = trim(#controller_method#) 
		AND TOP_MENU_ID > TO_NUMBER('000000') 
		AND USE_YN = 'Y'	
	</select>
	
</sqlMap>
